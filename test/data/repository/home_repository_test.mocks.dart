// Mocks generated by Mockito 5.4.4 from annotations
// in currency_converter_app/test/data/repository/home_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:currency_converter_app/core/utils/api_service/api_service.dart'
    as _i2;
import 'package:currency_converter_app/features/home/data/data_source/remote_data_source.dart'
    as _i4;
import 'package:currency_converter_app/features/home/data/model/convert.dart'
    as _i3;
import 'package:currency_converter_app/features/home/data/model/currency.dart'
    as _i6;
import 'package:currency_converter_app/features/home/data/model/hisrorical.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiService_0 extends _i1.SmartFake implements _i2.ApiService {
  _FakeApiService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConvertModel_1 extends _i1.SmartFake implements _i3.ConvertModel {
  _FakeConvertModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeRemoteDataSourceImp].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRemoteDataSourceImp extends _i1.Mock
    implements _i4.HomeRemoteDataSourceImp {
  @override
  _i2.ApiService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeApiService_0(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeApiService_0(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i2.ApiService);

  @override
  _i5.Future<List<_i6.CurrencyModel>> fetchCountry() => (super.noSuchMethod(
        Invocation.method(
          #fetchCountry,
          [],
        ),
        returnValue:
            _i5.Future<List<_i6.CurrencyModel>>.value(<_i6.CurrencyModel>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i6.CurrencyModel>>.value(<_i6.CurrencyModel>[]),
      ) as _i5.Future<List<_i6.CurrencyModel>>);

  @override
  _i5.Future<_i3.ConvertModel> convertCurrency({
    required String? fromCurrency,
    required String? toCurrency,
    required double? amount,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #convertCurrency,
          [],
          {
            #fromCurrency: fromCurrency,
            #toCurrency: toCurrency,
            #amount: amount,
          },
        ),
        returnValue: _i5.Future<_i3.ConvertModel>.value(_FakeConvertModel_1(
          this,
          Invocation.method(
            #convertCurrency,
            [],
            {
              #fromCurrency: fromCurrency,
              #toCurrency: toCurrency,
              #amount: amount,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.ConvertModel>.value(_FakeConvertModel_1(
          this,
          Invocation.method(
            #convertCurrency,
            [],
            {
              #fromCurrency: fromCurrency,
              #toCurrency: toCurrency,
              #amount: amount,
            },
          ),
        )),
      ) as _i5.Future<_i3.ConvertModel>);

  @override
  _i5.Future<List<_i7.HistoricalModel>> fetchHistorical({
    required String? date,
    required String? from,
    required String? to,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchHistorical,
          [],
          {
            #date: date,
            #from: from,
            #to: to,
          },
        ),
        returnValue: _i5.Future<List<_i7.HistoricalModel>>.value(
            <_i7.HistoricalModel>[]),
        returnValueForMissingStub: _i5.Future<List<_i7.HistoricalModel>>.value(
            <_i7.HistoricalModel>[]),
      ) as _i5.Future<List<_i7.HistoricalModel>>);
}
